// Generated by CoffeeScript 1.7.1
(function() {
  var boot, growlReporter, junitReporter, nodeReporters;

  growlReporter = require('jasmine-growl-reporter');

  nodeReporters = require('../reporter');

  junitReporter = require('../junit-reporter');

  boot = function(jasmineRequire, clockCallback) {
    var clockInstaller, clockUninstaller, env, jasmine, jasmineInterface, property;
    jasmine = jasmineRequire.core(jasmineRequire);

    /*
    Create the Jasmine environment. This is used to run all specs in a project.
     */
    env = jasmine.getEnv();
    jasmine.TerminalReporter = nodeReporters.TerminalReporter;
    jasmine.JUnitReporter = junitReporter.JUnitReporter;
    jasmine.GrowlReporter = growlReporter;

    /*
    Obtain the public Jasmine API.
     */
    jasmineInterface = jasmineRequire["interface"](jasmine, env);

    /*
    Add all of the Jasmine global/public interface to the proper global, so a project can use the public interface directly. For example, calling `describe` in specs instead of `jasmine.getEnv().describe`.
     */
    for (property in jasmineInterface) {
      if (jasmineInterface.hasOwnProperty(property)) {
        global[property] = jasmineInterface[property];
      }
    }
    global.jasmine = jasmine;
    clockInstaller = jasmine.currentEnv_.clock.install;
    clockUninstaller = jasmine.currentEnv_.clock.uninstall;
    jasmine.currentEnv_.clock.install = function() {
      clockCallback(true, env.clock);
      return clockInstaller();
    };
    jasmine.currentEnv_.clock.uninstall = function() {
      clockCallback(false, env.clock);
      return clockUninstaller();
    };

    /*
    Expose the mock interface for the JavaScript timeout functions
     */
    jasmine.clock = function() {
      return env.clock;
    };
    return jasmine;
  };

  module.exports = {
    boot: boot
  };

}).call(this);
